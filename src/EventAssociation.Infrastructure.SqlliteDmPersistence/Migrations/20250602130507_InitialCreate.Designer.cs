// <auto-generated />
using System;
using EventAssociation.Infrastructure.SqlliteDmPersistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EventAssociation.Infrastructure.SqlliteDmPersistence.Migrations
{
    [DbContext(typeof(VeaDbContext))]
    [Migration("20250602130507_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("EventAssociation.Core.Domain.Aggregates.Event.VeaEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT")
                        .HasColumnName("Description");

                    b.Property<int?>("Visibility")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Visibility");

                    b.Property<int>("status")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Status");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("Title");

                    b.HasKey("Id");

                    b.ToTable("VeaEvents", (string)null);
                });

            modelBuilder.Entity("EventAssociation.Core.Domain.Aggregates.Guest.VeaGuest", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("Email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("FirstName");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("LastName");

                    b.Property<string>("PictureUrl")
                        .HasColumnType("TEXT")
                        .HasColumnName("PictureUrl");

                    b.HasKey("Id");

                    b.ToTable("VeaGuests", (string)null);
                });

            modelBuilder.Entity("EventAssociation.Core.Domain.Aggregates.Event.VeaEvent", b =>
                {
                    b.OwnsOne("EventAssociation.Core.Domain.Aggregates.Event.EventDateTime", "EventDateTime", b1 =>
                        {
                            b1.Property<Guid>("VeaEventId")
                                .HasColumnType("TEXT");

                            b1.Property<DateTime?>("EndDateTime")
                                .HasColumnType("TEXT")
                                .HasColumnName("EndDateTime");

                            b1.Property<DateTime?>("StartDateTime")
                                .HasColumnType("TEXT")
                                .HasColumnName("StartDateTime");

                            b1.HasKey("VeaEventId");

                            b1.ToTable("VeaEvents");

                            b1.WithOwner()
                                .HasForeignKey("VeaEventId");
                        });

                    b.OwnsOne("EventAssociation.Core.Domain.Common.Values.Event.EventParticipants", "Participants", b1 =>
                        {
                            b1.Property<Guid>("VeaEventId")
                                .HasColumnType("TEXT");

                            b1.Property<int>("MaxGuests")
                                .HasColumnType("INTEGER")
                                .HasColumnName("MaxGuests");

                            b1.HasKey("VeaEventId");

                            b1.ToTable("VeaEvents");

                            b1.WithOwner()
                                .HasForeignKey("VeaEventId");

                            b1.OwnsMany("EventAssociation.Core.Domain.Common.Values.Guest.GuestId", "_guests", b2 =>
                                {
                                    b2.Property<Guid>("EventId")
                                        .HasColumnType("TEXT");

                                    b2.Property<Guid>("Value")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("TEXT")
                                        .HasColumnName("GuestId");

                                    b2.HasKey("EventId", "Value");

                                    b2.ToTable("EventGuests", (string)null);

                                    b2.WithOwner()
                                        .HasForeignKey("EventId");
                                });

                            b1.Navigation("_guests");
                        });

                    b.Navigation("EventDateTime");

                    b.Navigation("Participants");
                });
#pragma warning restore 612, 618
        }
    }
}
